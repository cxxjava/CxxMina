################OPTION###################
# release or debug
VERTYPE=RELEASE

KERNEL:=$(shell uname)
LIBDIR = linux
#CPPSTD = c++98
CPPSTD = c++11

ARCH:=$(shell uname -m)
RC:=$(ARCH)
BIT32:=i686
BIT64:=x86_64

$(info KERNEL=$(KERNEL))
$(info ARCH=$(ARCH))

ifeq ($(KERNEL),Darwin)
    LIBDIR = osx
endif

ifeq ($(RC),$(BIT32))
	SHAREDLIB = -lefc32 -leso32 -lrt -lm -ldl -lpthread -lcrypto
else
	SHAREDLIB = -lefc64 -leso64 -liconv -ldl -lpthread -lcrypto
endif

ifeq ($(VERTYPE), RELEASE)
CCOMPILEOPTION = -c -g -O2 -D__MAIN__
CPPCOMPILEOPTION = -std=$(CPPSTD) -c -g -O2 -fpermissive -D__MAIN__
TESTEIO = testeio
else
CCOMPILEOPTION = -c -g -D__MAIN__
CPPCOMPILEOPTION = -std=$(CPPSTD) -c -g -fpermissive -DDEBUG -D__MAIN__
TESTEIO = testeio_d
endif

CCOMPILE = gcc
CPPCOMPILE = g++
INCLUDEDIR = \
	-I../../efc \
	-I../../elog \
	-I../../CxxJDK/efc \
	-I../../CxxLog4j \
	-I../http/inc \
	-I../inc \
	-I../ \
	-I/usr/local/Cellar/openssl/1.0.2g/include \

LINK = g++
LINKOPTION = -std=$(CPPSTD) -g
LIBDIRS = -L../../efc/lib/$(LIBDIR) -L../../CxxJDK/lib/$(LIBDIR)
APPENDLIB = 

BASE_SRC   += $(sort $(wildcard ../../elog/src/*.cpp ../../CxxLog4j/src/*.cpp))
BASE_OBJS   += $(patsubst %.cpp,%.o, $(patsubst %.c,%.o, $(BASE_SRC)))

TESTEIO_SRC   += $(sort $(wildcard ../src/*.cpp ../http/src/*.cpp))
TESTEIO_OBJS   += $(patsubst %.cpp,%.o, $(patsubst %.c,%.o, $(TESTEIO_SRC)))

TESTEIO_OBJS += testeio.o

$(TESTEIO): $(BASE_OBJS) $(TESTEIO_OBJS) $(APPENDLIB)
	$(LINK) $(LINKOPTION) -o $(TESTEIO) $(LIBDIRS) $(BASE_OBJS) $(TESTEIO_OBJS) $(SHAREDLIB) $(APPENDLIB)

clean: 
	rm -f $(BASE_OBJS) $(TESTEIO_OBJS)

all: clean $(TESTEIO) clean
.PRECIOUS:%.cpp %.c
.SUFFIXES:
.SUFFIXES:  .c .o .cpp

.cpp.o:
	$(CPPCOMPILE) -c -o $*.o $(CPPCOMPILEOPTION) $(INCLUDEDIR)  $*.cpp

.c.o:
	$(CCOMPILE) -c -o $*.o $(CCOMPILEOPTION) $(INCLUDEDIR) $*.c
